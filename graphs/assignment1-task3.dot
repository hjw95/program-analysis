digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x5585e3fba9a0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  %d = alloca i32, align 4\l  %e = alloca i32, align 4\l  %f = alloca i32, align 4\l  %i = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 5, i32* %b, align 4\l  store i32 0, i32* %i, align 4\l  br label %while.cond\l}"];
	Node0x5585e3fba9a0 -> Node0x5585e3fbb6f0;
	Node0x5585e3fbb6f0 [shape=record,label="{while.cond:                                       \l  %0 = load i32, i32* %i, align 4\l  %cmp = icmp slt i32 %0, 10\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5585e3fbb6f0:s0 -> Node0x5585e3fbb910;
	Node0x5585e3fbb6f0:s1 -> Node0x5585e3fbb9f0;
	Node0x5585e3fbb910 [shape=record,label="{while.body:                                       \l  %1 = load i32, i32* %i, align 4\l  %rem = srem i32 %1, 2\l  %cmp1 = icmp eq i32 %rem, 0\l  br i1 %cmp1, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5585e3fbb910:s0 -> Node0x5585e3fbbdc0;
	Node0x5585e3fbb910:s1 -> Node0x5585e3fbbe90;
	Node0x5585e3fbbdc0 [shape=record,label="{if.then:                                          \l  store i32 -1, i32* %f, align 4\l  br label %if.end\l}"];
	Node0x5585e3fbbdc0 -> Node0x5585e3fbc010;
	Node0x5585e3fbbe90 [shape=record,label="{if.else:                                          \l  %2 = load i32, i32* %b, align 4\l  store i32 %2, i32* %c, align 4\l  br label %if.end\l}"];
	Node0x5585e3fbbe90 -> Node0x5585e3fbc010;
	Node0x5585e3fbc010 [shape=record,label="{if.end:                                           \l  %3 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %3, 1\l  store i32 %inc, i32* %i, align 4\l  br label %while.cond\l}"];
	Node0x5585e3fbc010 -> Node0x5585e3fbb6f0;
	Node0x5585e3fbb9f0 [shape=record,label="{while.end:                                        \l  %4 = load i32, i32* %d, align 4\l  store i32 %4, i32* %e, align 4\l  %5 = load i32, i32* %retval, align 4\l  ret i32 %5\l}"];
}
