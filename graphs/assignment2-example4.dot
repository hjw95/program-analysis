digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x5592dd298bf0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  %d = alloca i32, align 4\l  %e = alloca i32, align 4\l  %f = alloca i32, align 4\l  %g = alloca i32, align 4\l  %h = alloca i32, align 4\l  %sink = alloca i32, align 4\l  %source = alloca i32, align 4\l  %N = alloca i32, align 4\l  %i = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 0, i32* %i, align 4\l  br label %while.cond\l}"];
	Node0x5592dd298bf0 -> Node0x5592dd299c30;
	Node0x5592dd299c30 [shape=record,label="{while.cond:                                       \l  %0 = load i32, i32* %i, align 4\l  %1 = load i32, i32* %N, align 4\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5592dd299c30:s0 -> Node0x5592dd299e80;
	Node0x5592dd299c30:s1 -> Node0x5592dd299f60;
	Node0x5592dd299e80 [shape=record,label="{while.body:                                       \l  %2 = load i32, i32* %i, align 4\l  %rem = srem i32 %2, 2\l  %cmp1 = icmp eq i32 %rem, 0\l  br i1 %cmp1, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5592dd299e80:s0 -> Node0x5592dd29a1a0;
	Node0x5592dd299e80:s1 -> Node0x5592dd29a270;
	Node0x5592dd29a1a0 [shape=record,label="{if.then:                                          \l  %3 = load i32, i32* %source, align 4\l  store i32 %3, i32* %b, align 4\l  %4 = load i32, i32* %source, align 4\l  %add = add nsw i32 %4, 1\l  store i32 %add, i32* %d, align 4\l  %5 = load i32, i32* %h, align 4\l  store i32 %5, i32* %f, align 4\l  store i32 0, i32* %f, align 4\l  br label %if.end\l}"];
	Node0x5592dd29a1a0 -> Node0x5592dd29a6e0;
	Node0x5592dd29a270 [shape=record,label="{if.else:                                          \l  %6 = load i32, i32* %b, align 4\l  store i32 %6, i32* %c, align 4\l  %7 = load i32, i32* %i, align 4\l  %add2 = add nsw i32 %7, 1\l  store i32 %add2, i32* %g, align 4\l  %8 = load i32, i32* %g, align 4\l  %9 = load i32, i32* %d, align 4\l  %div = sdiv i32 %8, %9\l  store i32 %div, i32* %h, align 4\l  br label %if.end\l}"];
	Node0x5592dd29a270 -> Node0x5592dd29a6e0;
	Node0x5592dd29a6e0 [shape=record,label="{if.end:                                           \l  %10 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %10, 1\l  store i32 %inc, i32* %i, align 4\l  br label %while.cond\l}"];
	Node0x5592dd29a6e0 -> Node0x5592dd299c30;
	Node0x5592dd299f60 [shape=record,label="{while.end:                                        \l  %11 = load i32, i32* %c, align 4\l  store i32 %11, i32* %sink, align 4\l  %12 = load i32, i32* %retval, align 4\l  ret i32 %12\l}"];
}
